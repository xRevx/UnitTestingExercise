on:
  pull_request:
    branches:
      - main

jobs:
  clear-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Clear Readme
        run: echo -e "$(date +'%Y-%m-%d-%H-%M-%S') \n" > README.md

      - name: Update README with badge
        run: echo -e "![Tests](https://github.com/xRevx/UnitTestingExercise/actions/workflows/main.yml/badge.svg) \n" >> README.md
        shell: bash

      - name: Config git
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit readme
        run: |
          git fetch
          git checkout main
          git commit -am "Cleared readme" --author="GitHub Action <action@github.com>"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run-tests:
    needs: clear-readme
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pytest
        run: |
          pip install -U pytest

      - name: Acquire lock
        id: acquire_lock
        run: |
          while [ -f lockfile ]; do sleep 5; done
          echo "Lock" > lockfile

      - name: Run pytest
        env:
          temp_log: temp_log.txt
        run: pytest -q > $temp_log

      - name: Config git
        if: always()
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Actions"

      - name: Checkout main
        if: always()
        run: |
          git fetch
          git checkout main

      - name: Add Result
        if: always()
        run: |
          echo -e "Test Status: ${{ job.status }}">> README.md
          echo -e '\n' >> README.md
          echo "OS: ${{ matrix.os }}" >> README.md
          echo -e '\n' >> README.md
          echo "python version: ${{ matrix.python-version }}" >> README.md
          echo -e '\n' >> README.md

      - name: Add Result
        env:
          temp_log: temp_log.txt
        if: failure()
        run: |
          cat $temp_log >> README.md
          echo -e '\n' >> README.md

      - name: Publish To Github
        if: always()
        run: |
          git fetch origin main
          git stash
          git pull origin main
          git stash apply
          git commit -am "Update test status on README" --author="GitHub Action <action@github.com>"
          git push

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    needs: [run-tests]
    if: always()
    steps:
      - name: Final lock release
        if: ${{ needs.run-tests.result == 'success' }}
        run: |
          while [ -f lockfile ]; do sleep 5; done
          echo "Lock" > lockfile
          rm -f lockfile
